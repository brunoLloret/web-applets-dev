{
  "version": 3,
  "sources": ["../../@web-applets/sdk/dist/utils.js", "../../@web-applets/sdk/dist/core/shared.js", "../../@web-applets/sdk/dist/core/applet.js", "../../@web-applets/sdk/dist/core/context.js", "../../@web-applets/sdk/dist/index.js"],
  "sourcesContent": ["// Adds http/https to URLs, and prepends with window location if relative\nexport function parseUrl(url, base) {\n    if (url)\n        url = URL.parse(url, base ?? window.location.href).href;\n    return trimTrailingSlash(url);\n}\nfunction trimTrailingSlash(url) {\n    if (url.endsWith('/')) {\n        return url.slice(0, -1);\n    }\n    return url;\n}\n// Creates an OpenAI-compatible schema declaration for an action\nexport function createOpenAISchemaForAction(action) {\n    return {\n        strict: true,\n        name: 'action_schema',\n        schema: {\n            type: 'object',\n            required: Object.keys(action),\n            properties: {\n                id: { type: 'string' },\n                params: action.params,\n            },\n            additionalProperties: false,\n        },\n    };\n}\n", "/* Manifest & action definitions */\nimport { parseUrl } from '../utils';\nexport async function loadManifest(pageUrl) {\n    pageUrl = parseUrl(pageUrl);\n    let manifest;\n    try {\n        const pageRequest = await fetch(pageUrl);\n        const html = await pageRequest.text();\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(html, 'text/html');\n        const linkElem = doc.querySelector('link[rel=\"manifest\"]');\n        const manifestUrl = parseUrl(linkElem.href);\n        const manifestRequest = await fetch(manifestUrl);\n        manifest = await manifestRequest.json();\n        // TODO: Add verification this is a valid manifest\n    }\n    catch (e) {\n        return;\n    }\n    return manifest;\n}\nexport class AppletMessageRelay {\n    constructor(target) {\n        this.target = target;\n    }\n    async send(message, options) {\n        this.target.postMessage(message.toJson(), '*');\n        if (options && options.resolves === false)\n            return;\n        // Wait for a resolve message to be sent back before completing await\n        return new Promise((resolve) => {\n            const listener = (messageEvent) => {\n                const responseMessage = new AppletMessage(messageEvent.data.type, messageEvent.data);\n                if (responseMessage.type === 'resolve' &&\n                    responseMessage.id === message.id) {\n                    window.removeEventListener('message', listener);\n                    resolve(responseMessage);\n                }\n            };\n            window.addEventListener('message', listener);\n        });\n    }\n    async on(messageType, callback) {\n        const listener = async (messageEvent) => {\n            if (messageEvent.source === window.self)\n                return;\n            if (messageEvent.data.type !== messageType)\n                return;\n            const message = new AppletMessage(messageEvent.data.type, messageEvent.data);\n            // Wait for the callback to complete, then send a 'resolve' event\n            // with the message ID.\n            await callback(message);\n            const resolveMessage = new AppletResolveMessage({ id: message.id });\n            this.send(resolveMessage, { resolves: false });\n        };\n        window.addEventListener('message', listener);\n        // TODO: Return something that I can then call .off or .removeListener, implement the\n        // rest of that event class\n    }\n}\n/* Messages */\nexport class AppletMessage {\n    constructor(type, values) {\n        this.timeStamp = Date.now();\n        this.type = type;\n        this.id = crypto.randomUUID();\n        if (values)\n            Object.assign(this, values);\n    }\n    toJson() {\n        return Object.fromEntries(Object.entries(this).filter(([_, value]) => {\n            try {\n                JSON.stringify(value);\n                return true;\n            }\n            catch {\n                return false;\n            }\n        }));\n    }\n}\nexport class AppletResolveMessage extends AppletMessage {\n    constructor({ id }) {\n        super('resolve');\n        this.id = id;\n    }\n}\nexport class AppletActionsMessage extends AppletMessage {\n    constructor({ actions }) {\n        super('actions');\n        this.actions = actions;\n    }\n}\nexport class AppletDataMessage extends AppletMessage {\n    constructor({ data }) {\n        super('data');\n        this.data = data;\n    }\n}\nexport class AppletReadyMessage extends AppletMessage {\n    constructor() {\n        super('ready');\n    }\n}\nexport class AppletResizeMessage extends AppletMessage {\n    constructor({ dimensions, }) {\n        super('resize');\n        this.dimensions = dimensions;\n    }\n}\nexport class AppletActionMessage extends AppletMessage {\n    constructor({ actionId, params }) {\n        super('action');\n        this.actionId = actionId;\n        this.params = params;\n    }\n}\nexport class AppletInitMessage extends AppletMessage {\n    constructor() {\n        super('init');\n    }\n}\n/* Events */\nexport class AppletDataEvent extends Event {\n    constructor({ data }) {\n        super('data', {\n            bubbles: false,\n            cancelable: false,\n            composed: false,\n        });\n        this.data = data;\n    }\n}\nexport class AppletReadyEvent extends Event {\n    constructor() {\n        super('ready', {\n            bubbles: false,\n            cancelable: false,\n            composed: false,\n        });\n    }\n}\nexport class AppletLoadEvent extends Event {\n    constructor() {\n        super('load', {\n            bubbles: false,\n            cancelable: false,\n            composed: false,\n        });\n    }\n}\nexport class AppletActionsEvent extends Event {\n    constructor({ actions }) {\n        super('actions', {\n            bubbles: false,\n            cancelable: false,\n            composed: false,\n        });\n        this.actions = actions;\n    }\n}\nexport class AppletResizeEvent extends Event {\n    constructor({ dimensions }) {\n        super('resize', {\n            bubbles: false,\n            cancelable: false,\n            composed: false,\n        });\n        this.dimensions = dimensions;\n    }\n}\n", "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Applet_instances, _Applet_manifest, _Applet_data, _Applet_addListeners;\nimport { parseUrl } from '../utils';\nimport { AppletDataMessage, AppletInitMessage, AppletDataEvent, AppletResizeEvent, AppletActionsEvent, AppletMessageRelay, loadManifest, AppletReadyEvent, AppletActionMessage, } from './shared';\n// Container for initializing applets without an explicit container\nconst hiddenContainer = document.createElement('iframe');\nhiddenContainer.style.display = 'none';\ndocument.body.appendChild(hiddenContainer);\n// Options for loading an applet\n// interface LoadOpts {\n//   unsafe?: boolean;\n// }\n// const defaultOpts: LoadOpts = {\n//   unsafe: false,\n// };\n// Load an applet object from a URL\nexport async function load(url, container\n// opts?: LoadOpts\n) {\n    if (!container)\n        container = hiddenContainer;\n    url = parseUrl(url);\n    const manifest = await loadManifest(url);\n    // If unsafe enabled, allow same origin sandbox\n    // This is required for e.g. YouTube embeds\n    //   const _opts = Object.assign(defaultOpts, opts ?? {});\n    // if (_opts.unsafe && manifest.unsafe) {\n    //   container.setAttribute(\n    //     'sandbox',\n    //     'allow-scripts allow-forms allow-same-origin'\n    //   );\n    // } else {\n    //   container.setAttribute('sandbox', 'allow-scripts allow-forms');\n    // }\n    container.setAttribute('sandbox', 'allow-scripts allow-forms');\n    container.src = url;\n    const applet = new Applet(manifest, container.contentWindow);\n    return new Promise((resolve) => {\n        applet.onready = () => resolve(applet);\n    });\n}\nexport class Applet extends EventTarget {\n    constructor(manifest, targetWindow) {\n        super();\n        _Applet_instances.add(this);\n        this.actions = [];\n        _Applet_manifest.set(this, void 0);\n        _Applet_data.set(this, void 0);\n        this.messageRelay = new AppletMessageRelay(targetWindow);\n        __classPrivateFieldSet(this, _Applet_manifest, manifest, \"f\");\n        __classPrivateFieldGet(this, _Applet_instances, \"m\", _Applet_addListeners).call(this);\n        this.messageRelay.on('ready', () => {\n            this.messageRelay.send(new AppletInitMessage());\n        });\n    }\n    async dispatchAction(actionId, params) {\n        const actionMessage = new AppletActionMessage({\n            actionId,\n            params,\n        });\n        return await this.messageRelay.send(actionMessage);\n    }\n    get data() {\n        return __classPrivateFieldGet(this, _Applet_data, \"f\");\n    }\n    set data(data) {\n        __classPrivateFieldSet(this, _Applet_data, data, \"f\");\n        this.messageRelay.send(new AppletDataMessage({ data }));\n    }\n    get manifest() {\n        return __classPrivateFieldGet(this, _Applet_manifest, \"f\");\n    }\n    onready(event) { }\n    onresize(event) { }\n    onactions(event) { }\n    ondata(event) { }\n}\n_Applet_manifest = new WeakMap(), _Applet_data = new WeakMap(), _Applet_instances = new WeakSet(), _Applet_addListeners = function _Applet_addListeners() {\n    this.messageRelay.on('ready', (message) => {\n        const readyEvent = new AppletReadyEvent();\n        if (typeof this.onready === 'function')\n            this.onready(readyEvent);\n        this.dispatchEvent(readyEvent);\n    });\n    this.messageRelay.on('data', (message) => {\n        __classPrivateFieldSet(this, _Applet_data, message.data, \"f\");\n        const dataEvent = new AppletDataEvent({ data: message.data });\n        if (typeof this.ondata === 'function')\n            this.ondata(dataEvent);\n        this.dispatchEvent(dataEvent);\n    });\n    this.messageRelay.on('resize', (message) => {\n        const resizeEvent = new AppletResizeEvent({\n            dimensions: message.dimensions,\n        });\n        if (typeof this.onresize === 'function')\n            this.onresize(resizeEvent);\n        this.dispatchEvent(resizeEvent);\n    });\n    this.messageRelay.on('actions', (message) => {\n        this.actions = message.actions;\n        const actionsEvent = new AppletActionsEvent({ actions: message.actions });\n        if (typeof this.onactions === 'function')\n            this.onactions(actionsEvent);\n        this.dispatchEvent(actionsEvent);\n    });\n};\n", "var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _AppletContext_actions, _AppletContext_data;\nimport { AppletMessage, AppletDataEvent, AppletLoadEvent, AppletReadyEvent, AppletActionsMessage, AppletReadyMessage, AppletMessageRelay, } from './shared';\nexport class AppletContext extends EventTarget {\n    constructor() {\n        super();\n        this.actionHandlers = {};\n        _AppletContext_actions.set(this, {});\n        _AppletContext_data.set(this, void 0);\n        this.connect();\n    }\n    connect() {\n        this.messageRelay = new AppletMessageRelay(window.parent);\n        // When document loads/if it's loaded, call the initialize function\n        if (document.readyState === 'complete' ||\n            document.readyState === 'interactive') {\n            // Document has loaded already.\n            // Timeout added so if the caller defines the onload function, it will exist by now\n            setTimeout(this.initialize.bind(this), 1);\n        }\n        else {\n            // Document not yet loaded, we'll add an event listener to call when it does\n            window.addEventListener('DOMContentLoaded', this.initialize.bind(this));\n        }\n        this.createResizeObserver();\n        this.attachListeners();\n    }\n    async initialize() {\n        const manifestLinkElem = document.querySelector('link[rel=\"manifest\"]');\n        if (!manifestLinkElem)\n            return;\n        try {\n            const manifestRequest = await fetch(manifestLinkElem.href);\n            const manifest = await manifestRequest.json();\n            this.manifest = manifest;\n            this.actions = manifest.actions ?? [];\n        }\n        catch (e) {\n            return;\n        }\n        // Call the onload function\n        const loadEvent = new AppletLoadEvent();\n        this.dispatchEvent(loadEvent);\n        if (typeof this.onload === 'function')\n            await this.onload(loadEvent);\n        // Tell the host we're ready\n        this.messageRelay.send(new AppletReadyMessage());\n        // Emit a local ready event\n        const readyEvent = new AppletReadyEvent();\n        this.dispatchEvent(readyEvent);\n        if (typeof this.onready === 'function')\n            this.onready(readyEvent);\n    }\n    createResizeObserver() {\n        const resizeObserver = new ResizeObserver((entries) => {\n            for (let entry of entries) {\n                const message = new AppletMessage('resize', {\n                    dimensions: {\n                        width: entry.contentRect.width,\n                        height: entry.contentRect.height,\n                    },\n                });\n                this.messageRelay.send(message);\n            }\n        });\n        resizeObserver.observe(document.querySelector('html'));\n    }\n    attachListeners() {\n        this.messageRelay.on('init', (message) => {\n            this.manifest = message.manifest;\n            this.actions = this.manifest?.actions || [];\n        });\n        this.messageRelay.on('data', (message) => {\n            this.setData(message.data);\n        });\n        this.messageRelay.on('action', async (message) => {\n            if (Object.keys(this.actionHandlers).includes(message.actionId)) {\n                await this.actionHandlers[message.actionId](message.params);\n            }\n        });\n    }\n    setActionHandler(actionId, handler) {\n        this.actionHandlers[actionId] = handler;\n    }\n    defineAction(actionId, definition) {\n        const { handler, ...properties } = definition;\n        this.actions = [\n            ...this.actions,\n            {\n                id: actionId,\n                ...properties,\n            },\n        ];\n        this.setActionHandler(actionId, handler);\n    }\n    set actions(actions) {\n        if (!actions)\n            return;\n        for (let action of actions) {\n            __classPrivateFieldGet(this, _AppletContext_actions, \"f\")[action.id] = action;\n        }\n        this.messageRelay.send(new AppletActionsMessage({ actions: this.actions }));\n    }\n    get actions() {\n        return Object.values(__classPrivateFieldGet(this, _AppletContext_actions, \"f\"));\n    }\n    set data(data) {\n        this.setData(data);\n    }\n    get data() {\n        return __classPrivateFieldGet(this, _AppletContext_data, \"f\");\n    }\n    async setData(data) {\n        const dataMessage = new AppletMessage('data', { data });\n        await this.messageRelay.send(dataMessage);\n        __classPrivateFieldSet(this, _AppletContext_data, data, \"f\");\n        const dataEvent = new AppletDataEvent({ data });\n        this.dispatchEvent(dataEvent);\n        this.ondata(dataEvent);\n    }\n    onload(event) { }\n    onready(event) { }\n    ondata(event) { }\n}\n_AppletContext_actions = new WeakMap(), _AppletContext_data = new WeakMap();\nexport function getContext() {\n    return new AppletContext();\n}\n", "export * from './core/shared';\nexport * from './core/applet';\nexport * from './core/context';\nimport { load } from './core/applet';\nimport { getContext } from './core/context';\nexport const applets = {\n    load,\n    getContext,\n};\n"],
  "mappings": "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",
  "names": ["_Applet_addListeners", "__classPrivateFieldGet", "__classPrivateFieldSet"]
}
